setup_duat!(setup);
use duat::prelude::*;
// Since duat_kak is a plugin, it must be used explicitly.
use duat_kak::{Insert, Normal};

fn setup() {
    // The print module configures file printing.
    print::wrap_on_width();

    hooks::remove("FileWidgets");
    // This hook lets you push widgets to the files.
    hooks::add::<OnFileOpen>(|builder| {
        // These widgets go on the left by default.
        builder.push(VertRule::cfg());
        builder.push(LineNumbers::cfg());
    });
    hooks::remove("WindowWidgets");
    // Same, but on the edges of the window.
    hooks::add::<OnWindowOpen>(|builder| {
        // "[" "]" pairs change the style of text.
        let (child, _) = builder.push(status!(
            [File] { File::name } " "
            mode_fmt " " selections_fmt " " main_fmt
        ));
        let cmd_line = CmdLine::cfg().left_ratioed(3, 5);
        // `push_to` pushes a widget to another.
        builder.push_to(cmd_line, child);
    });

    mode::set_default(Normal::new());
    // Alias show up on the screen as if they were text
    alias::<Insert>("jk", "<Esc>");

    hooks::add::<ModeSwitched>(|&(_, new)| match new {
        "Insert" => cursor::set_main(CursorShape::SteadyBar),
        _ => cursor::set_main(CursorShape::SteadyBlock),
    });

    forms::set("File", Form::yellow().bold());
    // This Form is used by `mode_fmt`.
    forms::set("Mode", Form::dark_magenta());
}
